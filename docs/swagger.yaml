basePath: /
definitions:
  autokatolog.Car:
    properties:
      id:
        description: Add `db` tags to match column names
        type: integer
      mark:
        type: string
      model:
        type: string
      owner:
        allOf:
        - $ref: '#/definitions/autokatolog.People'
        description: Note the db tag should match the SQL column name
      reg_num:
        description: Change json tag to align and add `db` tag
        type: string
      year:
        type: integer
    type: object
  autokatolog.People:
    properties:
      id:
        type: integer
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.statusResponse:
    properties:
      status:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for AutoCatalog Application
  title: AutoCatalog
  version: "1.0"
paths:
  /cars:
    get:
      consumes:
      - application/json
      description: Get all cars with pagination and optional filtering by any car
        attribute
      operationId: get-all-cars
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: pageSize
        type: integer
      - description: Filter by registration number
        in: query
        name: reg_num
        type: string
      - description: Filter by car mark
        in: query
        name: mark
        type: string
      - description: Filter by car model
        in: query
        name: model
        type: string
      - description: Filter by manufacturing year
        in: query
        name: year
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/autokatolog.Car'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get all cars
      tags:
      - cars
    post:
      consumes:
      - application/json
      description: Create a new car with an owner
      operationId: create-car
      parameters:
      - description: Car and Owner Info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/autokatolog.Car'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Create a car
      tags:
      - cars
  /cars/{reg_num}:
    delete:
      consumes:
      - application/json
      description: Delete a car by its registration number
      operationId: delete-car
      parameters:
      - description: Car Registration Number
        in: path
        name: reg_num
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Delete car
      tags:
      - cars
    get:
      consumes:
      - application/json
      description: Get a single car by its registration number
      operationId: get-car-by-regnum
      parameters:
      - description: Car Registration Number
        in: path
        name: reg_num
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/autokatolog.Car'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get car by registration number
      tags:
      - cars
    put:
      consumes:
      - application/json
      description: Update car attributes by registration number
      operationId: update-car
      parameters:
      - description: Car Registration Number
        in: path
        name: reg_num
        required: true
        type: string
      - description: Car Update Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/autokatolog.Car'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Update car
      tags:
      - cars
swagger: "2.0"
